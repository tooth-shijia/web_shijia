<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/beans"
             xmlns:aop="http://www.springframework.org/schema/aop" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:util="http://www.springframework.org/schema/util" xmlns:p="http://www.springframework.org/schema/p"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.2.xsd
	    http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.2.xsd"
             default-autowire="byName">

    <bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>
    <!-- 公共的Spring容器 -->

    <!-- 公共的数据源配置 -->
    <util:properties id="dbConfig" location="classpath:/config/jdbc.properties"></util:properties>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
          lazy-init="default" autowire="default" destroy-method="close">
        <property name="driverClassName" value="#{dbConfig['master.mysqldriver']}"></property>
        <property name="url" value="#{dbConfig['shijia.url']}"></property>
        <property name="username" value="#{dbConfig['shijia.user']}"></property>
        <property name="password" value="#{dbConfig['shijia.password']}"></property>
        <property name="maxWait" value="#{dbConfig['master.maxwait']}"></property>
        <property name="maxActive" value="#{dbConfig['shijia.maxActive']}"></property>
        <property name="initialSize" value="#{dbConfig['shijia.initialSize']}"></property>
        <property name="minIdle" value="#{dbConfig['shijia.minIdle']}"></property>
        <!-- 是否要进行检测 -->
        <property name="testWhileIdle" value="#{dbConfig['shijia.testWhileIdle']}"/>
        <!-- 进行检测一个连接是有效的SQL语句，比如 mysql是 select 1 -->
        <property name="validationQuery" value="#{dbConfig['shijia.validationQuery']}"/>
        <!-- 是否在数据库连接请求量大的时候，如总数50，当前已请求了49个，所剩不多了，检测那些执行时间久的连接，将其从池中移除掉(移除之后怎么作，由实现决定，如直接断开，或者任其继续执行等) -->
        <property name="removeAbandoned" value="#{dbConfig['shijia.removeAbandoned']}"/>
        <!-- 一次数据库操作执行时间超过多少秒的连接被认为是需要移除的 -->
        <property name="removeAbandonedTimeout"
                  value="#{dbConfig['shijia.removeAbandonedTimeout']}"/>
        <!-- 每隔多少时间检测一次，比如每半小时检测一次，总不能总是检测，这会对性能产生影响 -->
        <property name="timeBetweenEvictionRunsMillis"
                  value="#{dbConfig['shijia.timeBetweenEvictionRunsMillis']}"/>
        <!-- 每次检测时，需要检测多少个数据连接，一般设置为与最大连接数一样，这样就可以检测完所有的连接 -->
        <property name="numTestsPerEvictionRun"
                  value="#{dbConfig['shijia.numTestsPerEvictionRun']}"/>
        <!-- 一个数据库连接连接多少时间之外，我们认为其应该不再适用了(可能下一次就会失效了)，应该移除并重新建立连接了 -->
        <property name="minEvictableIdleTimeMillis"
                  value="#{dbConfig['shijia.minEvictableIdleTimeMillis']}"/>
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:config/mybatis-config.xml"></property>
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- api -->
    <util:properties id="apiConfig"
                     location="classpath:config/server.properties"></util:properties>

    <!-- 接口地址配置 start -->

    <!-- 查询订单 -->
    <bean id="orderQueryUrl"
          class="com.shijia.web.repository.util.domain.RESTfulConfigItem">
        <property name="url" value="#{apiConfig['OrderQuery_URL']}"/>
        <property name="timeout" value="#{apiConfig['OrderQuery_TIMEOUT']]}"/>
    </bean>

    <!-- 接口地址配置 end -->


</beans:beans>