<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shijia.web.repository.mapper.ProductShowDAO">

    <resultMap id="ProductShowMap" type="com.shijia.web.repository.mapper.domain.ProductShow">
        <result property="id" column="id"/>
        <result property="productName" column="product_name"/>
        <result property="productId" column="product_id"/>
        <result property="productClassify" column="product_classify"/>
        <result property="productTypeId" column="product_type_id"/>
        <result property="productTypeName" column="product_type_name"/>
        <result property="comefrom" column="comefrom"/>
        <result property="author" column="author"/>
        <result property="content" column="content"/>
        <result property="showCount" column="show_count"/>
        <result property="createTime" column="createtime"/>
        <result property="lastModifyTime" column="lastmodifytime"/>
        <result property="isDelete" column="is_delete"/>
        <result property="coverImage" column="cover_image"/>
    </resultMap>

    <sql id="Sql_Base_Table_Name">
        `product_show`
    </sql>

    <!-- create -->
    <insert id="addProductShow" parameterType="com.shijia.web.repository.mapper.domain.ProductShow">
        INSERT INTO
        <include refid="Sql_Base_Table_Name"/>
        (product_name,product_id,product_classify,product_type_id,product_type_name,comefrom,author,content,show_count,
        createtime,lastmodifytime,is_delete,cover_image)
        VALUES
        (#{productName},#{productId},#{productClassify},#{productTypeId},#{productTypeName},#{comefrom},#{author},
        #{content},#{showCount},#{createTime},#{lastModifyTime},#{isDelete},#{coverImage})
    </insert>

    <!-- update -->
    <update id="updateProductShowById" parameterType="com.shijia.web.repository.mapper.domain.ProductShow">
        UPDATE
        <include refid="Sql_Base_Table_Name"/>
        SET
        product_name=#{productName},
        product_id=#{productId},
        product_classify=#{productClassify},
        product_type_id=#{productTypeId},
        product_type_name=#{productTypeName},
        comefrom=#{comefrom},
        author=#{author},
        content=#{content},
        lastmodifytime=#{lastModifyTime},
        cover_image=#{coverImage}
        WHERE
        id=#{id}
    </update>
    <update id="delOpeProductShowById" parameterType="int">
        UPDATE
        <include refid="Sql_Base_Table_Name"/>
        SET
        is_delete = #{0}
        WHERE
        id=#{1}
    </update>
    <!-- select -->
    <select id="getProductByPageAndTypeContainDelete" parameterType="int" resultMap="ProductShowMap">
        select
        id,product_name,product_id,product_classify,product_type_id,product_type_name,comefrom,author,content,show_count,createtime,
        lastmodifytime,is_delete,cover_image
        from
        <include refid="Sql_Base_Table_Name"/>
        where
        product_type_id=#{2}
        order by id desc
        limit #{0},#{1}
    </select>

    <select id="getAllProductSimpleBySite" parameterType="int" resultMap="ProductShowMap">
        SELECT
        id,product_name,product_id,product_type_id,comefrom,cover_image
        FROM
        <include refid="Sql_Base_Table_Name"/>
        where
        product_classify=#{site}
        and
        is_delete=0
        order by
        createtime desc
    </select>

    <select id="getTotalCountByTypeId" parameterType="int" resultType="int">
        select count(*)
        from
        <include refid="Sql_Base_Table_Name"/>
        where
        product_type_id=#{0}
    </select>
    <select id="getProductById" parameterType="int" resultMap="ProductShowMap">
        select
        id,product_name,product_id,product_classify,product_type_id,product_type_name,comefrom,author,content,show_count,createtime,
        lastmodifytime,is_delete,cover_image
        from
        <include refid="Sql_Base_Table_Name"/>
        where id=#{0}
    </select>

</mapper>